{"ast":null,"code":"var _jsxFileName = \"/Users/zainmukati/Desktop/Expense_Tracker_React/react_tut/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport './ExpenseForm.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  // intial state can be represented by an empty string\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  const saveExpenseDataHandler = props.onSaveExpenseData;\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n    saveExpenseDataHandler(expenseData);\n    setEnteredAmount('');\n    setEnteredDate('');\n    setEnteredTitle('');\n  }; // const [userInput, setUserInput] = useState({\n  //     enteredTitle : '',\n  //     enteredAmount: '',\n  //     enteredDate:''\n  // });\n  // get the current value with every keystroke\n\n\n  const titleChangeHandler = event => {\n    // this react below simply schedules an update while the new function  below immedialtley executes the update, which is essential sinnce schedfuling an update can lead \n    // to a stale state being used to create the new state\n    // setUserInput({\n    //     ...userInput,\n    //     enteredTitle: event.target.value\n    // })\n    setEnteredTitle(event.target.value);\n  }; // get triggered when amount is chaned on page\n\n\n  const amountChangeHandler = event => {\n    // setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value\n    // })\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    // setUserInput({\n    //     ...userInput, // copies over previous data to the new state, overrides previous entered date value\n    //     enteredDate: event.target.value\n    // })\n    setEnteredDate(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Title \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/zainmukati/Desktop/Expense_Tracker_React/react_tut/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","saveExpenseDataHandler","onSaveExpenseData","submitHandler","event","preventDefault","expenseData","title","amount","date","Date","console","log","titleChangeHandler","target","value","amountChangeHandler","dateChangeHandler"],"mappings":"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","sourcesContent":["import './ExpenseForm.css';\nimport React, {useState} from 'react';\nconst ExpenseForm = (props) => {\n    // intial state can be represented by an empty string\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n    const saveExpenseDataHandler = props.onSaveExpenseData;\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const expenseData ={\n            title: enteredTitle,\n            amount: enteredAmount,\n            date : new Date(enteredDate)\n        };\n        console.log(expenseData);\n        saveExpenseDataHandler(expenseData);\n        setEnteredAmount('');\n        setEnteredDate('');\n        setEnteredTitle('');\n    };\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle : '',\n    //     enteredAmount: '',\n    //     enteredDate:''\n    // });\n\n    // get the current value with every keystroke\n    const titleChangeHandler = (event) => {\n        // this react below simply schedules an update while the new function  below immedialtley executes the update, which is essential sinnce schedfuling an update can lead \n        // to a stale state being used to create the new state\n        // setUserInput({\n        //     ...userInput,\n        //     enteredTitle: event.target.value\n        // })\n        setEnteredTitle(event.target.value);\n    }\n    // get triggered when amount is chaned on page\n    const amountChangeHandler = (event) => {\n        // setUserInput({\n        //     ...userInput,\n        //     enteredAmount: event.target.value\n        // })\n        setEnteredAmount(event.target.value);\n    }\n    const dateChangeHandler = (event) => {\n        // setUserInput({\n        //     ...userInput, // copies over previous data to the new state, overrides previous entered date value\n        //     enteredDate: event.target.value\n        // })\n        setEnteredDate(event.target.value);\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\"> \n                <div className=\"new-expense__control\">\n                    <label> Title </label>\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}></input>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label> Amount </label>\n                    <input type=\"number\" value={enteredAmount} onChange={amountChangeHandler}></input>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label> Date</label>\n                    <input type=\"date\" value={enteredDate} onChange={dateChangeHandler}></input>\n                </div>\n            </div>\n            <div>\n                <button type='submit'>Add Expense</button>\n            </div>\n        </form>\n    )\n};\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}